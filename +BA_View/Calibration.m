function handles = Calibration(parent, model)
%% CONFIGURATION View

    % build the GUI
    handles = initGUI(parent, model);
    initView(handles, model);    % populate with initial values

    % observe on model changes and update view accordingly
    % (tie listener to model object lifecycle)
    addlistener(model, 'calibration', 'PostSet', ...
        @(o,e) onSettingsChange(handles, e.AffectedObject));
end

function handles = initGUI(parent, model)

    acquire = uicontrol('Parent', parent, 'Style','pushbutton', 'Units', 'normalized',...
        'String','Start','Position',[0.02,0.92,0.1,0.055],...
        'FontSize', 11, 'HorizontalAlignment', 'left');

%     stop = uicontrol('Parent', parent, 'Style','pushbutton', 'Units', 'normalized',...
%         'String','Stop','Position',[0.18,0.92,0.1,0.055],...
%         'FontSize', 11, 'HorizontalAlignment', 'left');
    
    clear = uicontrol('Parent', parent, 'Style','pushbutton', 'Units', 'normalized',...
        'String','Clear','Position',[0.15,0.92,0.1,0.055],...
        'FontSize', 11, 'HorizontalAlignment', 'left');
    
    uicontrol('Parent', parent, 'Style', 'text', 'Units', 'normalized', 'String', 'Number of images:', ...
        'Position', [0.02,0.775,0.2,0.05], 'FontSize', 11, 'HorizontalAlignment', 'left');
    
    nrImg = uicontrol('Parent', parent, 'Style', 'edit', 'Units', 'normalized', 'String', model.calibration.nrImg, ...
        'Position', [0.18,0.785,0.07,0.05], 'FontSize', 11, 'HorizontalAlignment', 'center');

    uicontrol('Parent', parent, 'Style', 'text', 'Units', 'normalized', 'String', 'Sample:', ...
        'Position', [0.02,0.725,0.08,0.055], 'FontSize', 11, 'HorizontalAlignment', 'left');
    
    samples = uicontrol('Parent', parent, 'Style','popup', 'Units', 'normalized','Position',[0.02,0.69,0.23,0.055],...
        'String',model.calibration.samples,'FontSize', 11, 'HorizontalAlignment', 'left');

    uicontrol('Parent', parent, 'Style', 'text', 'Units', 'normalized', 'String', 'Show image number', ...
        'Position', [0.02,0.66,0.2,0.03], 'FontSize', 11, 'HorizontalAlignment', 'left');
    
    imageSlider = javax.swing.JSlider;
    imageSlider.setEnabled(true);
    javacomponent(imageSlider,[20,360,210,50],parent);
    set(imageSlider, 'MajorTickSpacing', 1, 'PaintLabels', true, 'PaintTicks', true, 'Minimum', 1, 'Maximum', 10);
    imageSlider.setValue(model.calibration.imgNr);
    
    uicontrol('Parent', parent, 'Style', 'text', 'Units', 'normalized', 'String', 'Image', ...
        'Position', [0.02,0.09,0.15,0.035], 'FontSize', 11, 'HorizontalAlignment', 'left');
    
    imgNr = uicontrol('Parent', parent, 'Style', 'edit', 'Units', 'normalized', 'String', '0', ...
        'Position', [0.0975,0.09,0.077,0.035], 'FontSize', 11, 'HorizontalAlignment', 'center', 'Tag', 'floor', 'enable', 'off');
    
    progressBar = javax.swing.JProgressBar;
    javacomponent(progressBar,[19,20,208,30],parent);
    progressBar.setValue(0);
    progressBar.setStringPainted(true);
    progressBar.setString('Acquisition stopped.');

    zoomIn = uicontrol('Parent', parent, 'Style','pushbutton', 'Units', 'normalized',...
        'String', model.sharedFunctions.iconString([model.pp '/images/zoomin.png']), 'Position',[0.33,0.92,0.0375,0.055],...
        'FontSize', 11, 'HorizontalAlignment', 'left');
    set(zoomIn, 'UserData', 0);
    
    zoomOut = uicontrol('Parent', parent, 'Style','pushbutton', 'Units', 'normalized',...
        'String', model.sharedFunctions.iconString([model.pp '/images/zoomout.png']), 'Position',[0.375,0.92,0.0375,0.055],...
        'FontSize', 11, 'HorizontalAlignment', 'left');
    set(zoomOut, 'UserData', 0);
    
    panButton = uicontrol('Parent', parent, 'Style','pushbutton', 'Units', 'normalized',...
        'String', model.sharedFunctions.iconString([model.pp '/images/pan.png']), 'Position',[0.42,0.92,0.0375,0.055],...
        'FontSize', 11, 'HorizontalAlignment', 'left');
    set(panButton, 'UserData', 0);

    uicontrol('Parent', parent, 'Style', 'text', 'String', 'Autoscale', 'Units', 'normalized',...
        'Position', [0.48,0.928,0.1,0.035], 'FontSize', 10, 'HorizontalAlignment', 'left');

    autoscale = uicontrol('Parent', parent, 'Style', 'checkbox', 'Units', 'normalized',...
        'Position', [0.55,0.93,0.017,0.034], 'FontSize', 11, 'HorizontalAlignment', 'left');

    uicontrol('Parent', parent, 'Style', 'text', 'String', 'Floor', 'Units', 'normalized',...
        'Position', [0.60,0.91,0.1,0.055], 'FontSize', 11, 'HorizontalAlignment', 'left');

    floor = uicontrol('Parent', parent, 'Style', 'edit', 'Units', 'normalized',...
        'Position', [0.65,0.92,0.075,0.055], 'FontSize', 11, 'HorizontalAlignment', 'center', 'Tag', 'floor');

    increaseFloor = uicontrol('Parent', parent, 'Style','pushbutton', 'Units', 'normalized',...
        'String', model.sharedFunctions.iconString([model.pp '/images/up.png']), 'Position',[0.74,0.9475,0.0325,0.0275],...
        'FontSize', 11, 'HorizontalAlignment', 'left', 'Tag', 'floor');

    decreaseFloor = uicontrol('Parent', parent, 'Style','pushbutton', 'Units', 'normalized',...
        'String', model.sharedFunctions.iconString([model.pp '/images/down.png']), 'Position',[0.74,0.92,0.0325,0.0275],...
        'FontSize', 11, 'HorizontalAlignment', 'left', 'Tag', 'floor');

    uicontrol('Parent', parent, 'Style', 'text', 'String', 'Cap', 'Units', 'normalized',...
        'Position', [0.79,0.91,0.1,0.055], 'FontSize', 11, 'HorizontalAlignment', 'left');

    cap = uicontrol('Parent', parent, 'Style', 'edit', 'Units', 'normalized',...
        'Position', [0.83,0.92,0.075,0.055], 'FontSize', 11, 'HorizontalAlignment', 'center', 'Tag', 'cap');

    increaseCap = uicontrol('Parent', parent, 'Style','pushbutton', 'Units', 'normalized',...
        'String', model.sharedFunctions.iconString([model.pp '/images/up.png']), 'Position',[0.92,0.9475,0.0325,0.0275],...
        'FontSize', 11, 'HorizontalAlignment', 'left', 'Tag', 'cap');

    decreaseCap = uicontrol('Parent', parent, 'Style','pushbutton', 'Units', 'normalized',...
        'String', model.sharedFunctions.iconString([model.pp '/images/down.png']), 'Position',[0.92,0.92,0.0325,0.0275],...
        'FontSize', 11, 'HorizontalAlignment', 'left', 'Tag', 'cap');
    
    axesCamera = axes('Parent', parent, 'Position', [0.33 .085 .65 .82]);
    imageCamera = imagesc(axesCamera, flipud(model.calibration.images.(model.calibration.selected)(:,:,model.calibration.imgNr)));
    set(axesCamera, 'box', 'on');
    xlabel(axesCamera, '$x$ [pix]', 'interpreter', 'latex');
    ylabel(axesCamera, '$y$ [pix]', 'interpreter', 'latex');
    zoom(gcf,'reset');
    zoomHandle = zoom;
    panHandle = pan;
    colorbar(axesCamera);
    
    %% Return handles
    handles = struct(...
        'acquire', acquire, ...
        'nrImg', nrImg, ...
        'clear', clear, ...
        'samples', samples, ...
        'imgNr', imgNr, ...
        'progressBar', progressBar, ...
        'autoscale', autoscale, ...
        'cap', cap, ...
        'increaseCap', increaseCap, ...
        'decreaseCap', decreaseCap, ...
        'increaseFloor', increaseFloor, ...
        'decreaseFloor', decreaseFloor, ...
        'floor', floor, ...
        'axesCamera', axesCamera, ...
        'imageCamera', imageCamera, ...
        'zoomIn', zoomIn, ...
        'zoomOut', zoomOut, ...
        'zoomHandle', zoomHandle, ...
        'panButton', panButton, ...
        'panHandle', panHandle, ...
        'imageSlider', imageSlider ...
	);
end

function initView(handles, model)
%% Initialize the view
    onSettingsChange(handles, model)
end

function onSettingsChange(handles, model)
    set(handles.autoscale, 'Value', model.calibration.autoscale);
    set(handles.cap, 'String', model.calibration.cap);
    set(handles.floor, 'String', model.calibration.floor);
    % setting the MajorTickSpacing somehow has no effect after it was set initially
    spacing = round(size(model.calibration.images.(model.calibration.selected), 3)/10);
    set(handles.imageSlider, 'MajorTickSpacing', spacing, 'Maximum', size(model.calibration.images.(model.calibration.selected), 3));
    if model.calibration.imgNr > size(model.calibration.images.(model.calibration.selected), 3)
        model.calibration.imgNr = size(model.calibration.images.(model.calibration.selected), 3);
    end
    img = model.calibration.images.(model.calibration.selected)(:,:,model.calibration.imgNr);
    set(handles.imageCamera, 'CData', img);
    axis(handles.axesCamera, [0 size(img,2) 0 size(img,1)] + 0.5);
    zoom(gcf,'reset');
    if model.calibration.autoscale
        caxis(handles.axesCamera,'auto');
    else
        caxis(handles.axesCamera,[model.calibration.floor model.calibration.cap]);
    end
    if model.calibration.acquisition
        set(handles.acquire, 'String', 'Stop');
    else
        set(handles.acquire, 'String', 'Start');
    end
    colorbar(handles.axesCamera);
end